OnTranslate
{
	_talk = reference0
	
	if reference1 == "" && reference2 == ""
	{ //send input box : no event (ref2) , no special flag (ref1)
		_talk = EVAL('"' + REPLACE(_talk,'"','""') + '"')
		_talk = OnTranslateInternal.AutoPause(_talk)
	}
	
	_talk = REPLACE(_talk,"@Zichqec","\_a[https://ukagaka.zichqec.com/]Zichqec\_a")
	_talk = REPLACE(_talk,"—","\f[name,calibri]—\f[name,default]")
	
	_talk = REPLACE(_talk,"@Aion","\_a[OnAskGods,Aion]Aion\_a")
	_talk = REPLACE(_talk,"@Dueyar","\_a[OnAskGods,Dueyar]Dueyar\_a")
	_talk = REPLACE(_talk,"@Xaeyar","\_a[OnAskGods,Xaeyar]Xaeyar\_a")
	_talk = REPLACE(_talk,"@Iella","\_a[OnAskGods,Iella]Iella\_a")
	_talk = REPLACE(_talk,"@Enva","\_a[OnAskGods,Enva]Enva\_a")
	_talk = REPLACE(_talk,"@Kasarae","\_a[OnAskGods,Kasarae]Kasarae\_a")
	_talk = REPLACE(_talk,"@Nyphine","\_a[OnAskGods,Nyphine]Nyphine\_a")
	_talk = REPLACE(_talk,"@Tysus","\_a[OnAskGods,Tysus]Tysus\_a")
	_talk = REPLACE(_talk,"@Gabin","\_a[OnAskGods,Gabin]Gabin\_a")
	_talk = REPLACE(_talk,"@Meiyr","\_a[OnAskGods,Meiyr]Meiyr\_a")
	_talk = REPLACE(_talk,"@Tohmjir","\_a[OnAskGods,Tohmjir]Tohmjir\_a")
	_talk = REPLACE(_talk,"@Nemara","\_a[OnAskGods,Nemara]Nemara\_a")
	_talk = REPLACE(_talk,"@Thaelia","\_a[OnAskGods,Thaelia]Thaelia\_a")
	_talk = REPLACE(_talk,"@Vismir","\_a[OnAskGods,Vismir]Vismir\_a")
	_talk = REPLACE(_talk,"@Sajun","\_a[OnAskGods,Sajun]Sajun\_a")
	_talk = REPLACE(_talk,"@Malous","\_a[OnAskGods,Malous]Malous\_a")
	_talk = REPLACE(_talk,"@Nevris","\_a[OnAskGods,Nevris]Nevris\_a")
	
	TOSTR(_talk)
}

OnTranslateInternal.AutoPause
{
	_talk = _argv[0]
	
	if "\![no-autopause]" !_in_ _talk
	{
		_talk = REPLACE(_talk,", ",",\w4 ") // ,
		_talk = REPLACE(_talk,". ",".\w8\w8 ") // .
		_talk = REPLACE(_talk,"? ","?\w8\w8 ") // ?
		_talk = REPLACE(_talk,"! ","!\w8\w8 ") // !
		_talk = REPLACE(_talk,"; ",";\w8 ") // ;
		_talk = REPLACE(_talk,": ",":\w8 ") // :
		_talk = REPLACE(_talk,"\n\n ","\n\n\w8\w8") // linebreak
	}
	
	_talk
}

OnAiTalk
{
	if CHAIN.IDName == ""
	{
		LastTalk = RandomTalk
	}
	else
	{
		LastTalk = ChainTalk
	}
	LastTalk
}


//Makes anchors with links jump to those links
OnAnchorSelect
{
	if "http://" _in_ reference0 || "https://" _in_ reference0; "\j[""%(reference0)""]"
}

//Hotkeys
OnKeyPress
{
	if reference0 == "f1"; "\![open,readme]"
	elseif reference0 == "t"; OnAiTalk
	elseif reference0 == "r"; OnLastTalk
}

//Happens about 30 seconds after a script ends, by default, to bring them back to normal poses
OnSurfaceRestore
{
	"\1\s[-1]\0"
	--
	if RAND(4) == 0
	{
		_surface = ANY(0,2)
		_time = (RAND(2) + 1) * 1000 //1-2 seconds
		smoke(_surface,_time,_time + 500,_time)
		--
		"\s[%(_surface)13]"
	}
	else
	{
		"\s[0]"
		"\s[13]"
		"\s[20]"
		"\s[22]"
		"\s[200]"
		"\s[213]"
		"\s[220]"
		"\s[222]"
	}
}

//A little bit of custom code to make him do surface restore randomly between dialogues, to make him a little more lively
OnSecondChange
{
	_since = GETSECCOUNT - SHIORI3FW.TalkEndTime
	
	//Every 15 seconds
	if _since % 15 == 0 && !BalloonIsOpen
	{
		if RAND(4) == 0; OnSurfaceRestore
	}
}

//As the name implies, this checks if the balloon is currently open or not.
//Will be 0 if the balloon is not open, and 1 if the balloon is open
BalloonIsOpen
{
	"balloon" _in_ status
}

//Happens when the ghost is unminimized. You *can* include dialogue, but you don't *have* to. I have included this event because if you don't, it defaults to \0\s[0]\1\s[10], which you don't want in some cases, such as if your ghost uses different surfaces or has a different number of characters.
OnWindowStateRestore
{
	OnSurfaceRestore
}

On_homeurl
{
	"https://raw.githubusercontent.com/Zichqec/xanders_refuge/main/"
}

ghostver
{
	"v1.0.2"
}


//—————————————————————————————— Right click menu links ——————————————————————————————

//Takes an array of alternating names and urls, and formats them for use with the right click menu
FormatLinks : all
{
	for _i = 0; _i < ARRAYSIZE(_argv); _i++
	{
		_argv[_i] //Add the link/title
		//Alternate between adding %ASC(1) or %ASC(2)
		if _i % 2 == 1; "%ASC(2)"
		else; "%ASC(1)"
	}
}

On_sakura.recommendsites
{
	FormatLinks(recommendsites_sakura)
}

//These are the websites linked in the top option of the sakura's right click menu. The format is simple; write the label of the link on the left followed by a semicolon, and then on the right, the url to link to. These should be separate strings.
recommendsites_sakura : array
{
	"Zi's Ukagaka Space";	"https://ukagaka.zichqec.com/"
}

On_sakura.portalsites 
{
	FormatLinks(portalsites_sakura)
}

username
{
	SHIORI3FW.UserName
}

br
{
	if SHIORI3FW.BalloonName == "Flip of a Coin"; "\n"
	else; " "
}

//Just a dev thing so I can quickly check how many dialogues he has
On_getaistateex : all
{
    _graph = AI_Graphs[reference0]
    if _graph != ""
    {
        _items = SPLIT(_graph,",")
        for _i = 0; _i < ARRAYSIZE(_items); _i++
        {
            if _i > 0; ","
            OUTPUTNUM("%(_items[_i])")
        }
        C_BYTE1
        for _i = 0; _i < ARRAYSIZE(_items); _i++
        {
            if _i > 0; ","
            "%(_items[_i])"
        }
    }
}

AI_Graphs : array
{
    "RandomTalk,overthere,closeshave,weirdinvention"
}

OnNeedlePoke : nonoverlap
{
	"\0\s[11].\w8.\w8.\w8\w8\w8\w8\w8\s[0]"
	"\0\s[211].\w8.\w8.\w8\w8\w8\w8\w8\s[200]"
	"\0\s[13].\w8.\w8."
	"\0\s[213].\w8.\w8."
	"\0\s[111]You do realize that I'm a god and your mortal weapons will have no effect on me,\w4%(br)correct?"
	"\0\s[11]Is that supposed to hurt?"
	"\0\s[0]Cute."
	"\0\s[213]You understand that this is futile, right?"
	"\0\s[13]What do you hope to achieve with this...?"
	"\0\s[21]If that's supposed to hurt, it doesn't."
	"\0\s[221]The foolishness of mortals truly knows no bounds..."
	"\0\s[0]If you hope to become a god slayer, you'll need a stronger weapon than that."
	"\0\s[31]Can I help you?"
	"\0\s[131]Is that supposed to be a weapon? It%(br)doesn't look particularly deadly."
	"\0\s[231]You've succeeded in putting a tiny hole in my shirt, congratulations."
	"\0\s[200]Mortals."
	"\0\s[0]Oh my, such a vicious attack. \s[11]I'm shaking in my boots."
	"\0\s[0]Taking out some frustration, are we?"
	"\0\s[11]That puny ""weapon"" of yours is only barely perceptible to me, for your information."
}

OnSpectrePlugin.ConfirmCalibration
{
	//Add expression names as references here in any order that should be omitted from the calibration...
	"\![raiseplugin,Spectre,OnCustomCalibrationConfirm,embarrassed,smile,relieved,sweat,indignant]"
}

OnSpectrePlugin.Surface
{
	if reference0 == "normal"; "\s[11]"
	//elseif reference0 == "embarrassed"; "\s[14]"
	elseif reference0 == "surprised"; "\s[30]"
	elseif reference0 == "anxious"; "\s[22]"
	elseif reference0 == "discouraged"; "\s[13]"
	//elseif reference0 == "smile"; "\s[1]"
	//elseif reference0 == "relieved"; "\s[4]"
	elseif reference0 == "angry"; "\s[21]"
	//elseif reference0 == "sweat"; "\s[9]"
	//elseif reference0 == "indignant"; "\s[3]\i[6]"
	elseif reference0 == "thinking"; "\s[222]"
	elseif reference0 == "unamused"; "\s[220]"
}

OnSpectrePlugin.Possession
{
	if RAND(4) == 0
	{
		"\0\s[0]Interesting..."
		"\0\s[11]There appears to be spiritual activity in this area. \s[0]You should take care."
		"\0\s[220]Hmm."
		"\0\s[20]Borrowing, are we...?"
		"\0\s[13]Evidently this cave is haunted... %(smoke(2))\s[213]Pity."
		"\0\s[20]Intriguing that you would choose me and not the far weaker human beside me... \s[213]I'll allow it, for now."
		"\0\s[220]It's a bit arrogant to take the body of a god, isn't it?"
		"\0\s[222]I'm honestly a little impressed you've managed this..."
		"\0\s[20]A strange feeling... \s[220]Interesting."
	}
}